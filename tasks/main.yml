---

- name: "Check OS family"
  fail: msg="This only works on Linux"
  when: ansible_system != 'Linux'

- name: "Include target OS vars"
  include_vars: "{{ bootstrap_os }}.yml"

- name: "Install required dependencies"
  become: true
  package:
    name: "{{ item }}"
    state: "present"
  with_items:
    - unzip
    - xz-utils

- name: "Create working directory"
  file:
    path: "{{ bootstrap_build_dir }}"
    state: "directory"

- name: "Download image"
  get_url:
    url: "{{ bootstrap_os_image_url }}"
    tmp_dest: "{{ bootstrap_build_dir }}"
    dest: "{{ bootstrap_build_dir }}/{{ bootstrap_os_image_zipname }}"

- name: "Unzip the image"
  unarchive:
    src: "{{ bootstrap_build_dir }}/{{ bootstrap_os_image_zipname }}"
    dest: "{{ bootstrap_build_dir }}"
    creates: "{{ bootstrap_build_dir }}/{{ bootstrap_os_image_filename }}"
    remote_src: yes
  when: bootstrap_os_image_zipname.endswith(".zip")

- name: "Unxz the image"
  shell: "unxz -k {{ bootstrap_build_dir }}/{{ bootstrap_os_image_zipname }}"
  args:
    creates: "{{ bootstrap_build_dir }}/{{ bootstrap_os_image_filename }}"
  when: bootstrap_os_image_zipname.endswith(".xz")

- include: image.yml
  with_items: "{{ bootstrap_hosts }}"
  loop_control:
    loop_var: hostname
